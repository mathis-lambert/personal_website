services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "3001:3001"
    env_file:
      - .env
    depends_on:
      - qdrant
      - mongodb
    volumes:
      - .:/app
    command: [ "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload" ]
    networks:
      - app-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant/storage/data:/qdrant/storage/data
      - ./qdrant/storage/snapshots:/qdrant/storage/snapshots
      - ./qdrant/config/config.yaml:/qdrant/config/config.yaml
    environment:
      RUN_MODE: ${RUN_MODE:-production}
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}


  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./mongodb/config/init-db.js:/docker-entrypoint-initdb.d/init-db.js
      - ./mongodb/data/:/data/db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - qdrant
      - api
      - mongodb

networks:
  app-network:
    driver: bridge
